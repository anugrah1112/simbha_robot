<?xml version="1.0" ?>

<robot name="simbha_structure" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Wheels -->
  <!-- in kg-->
  <!-- Defining the colors used in this robot -->
  
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
   --&gt; 

  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->

  <link name="base_link">
    <visual>
      <origin rpy="-1.57079632679 0 1.57079632679" xyz="0 0 0.07"/>
      <geometry>
         <mesh filename="package://simbha_structure/urdf/stl/Combine_Lower_Body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="White"/>
    </visual>
        <collision>
      <origin rpy="0 0 0 " xyz="0 0 0.07"/>
      <geometry>
        <cylinder length="0.004" radius="0.20"/>
      </geometry>
   <material name="White"/>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
<!-- middle link  -->
 
 <link name="middle_link">
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!--The 3x3 rotational inertia matrix. -->
       <inertia ixx="0.0000282916666667" ixy="0" ixz="0" iyy="0.0000282916666667" iyz="0" izz="0.00005625"/>
    </inertial>
    <visual>
      <origin rpy="-1.57079632679 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
         <mesh filename="package://simbha_structure/urdf/stl/Middle_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="White"/>
    </visual>
        <collision>
      <origin rpy="-1.57079632679 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
         <mesh filename="package://simbha_structure/urdf/stl/Middle_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
   <material name="White"/>
    </collision>
  </link>
  <gazebo reference="middle_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

<joint name="middle_joint" type="fixed">
    <parent link="base_link"/>
    <child link="middle_link"/>
    <origin rpy="0 0 0" xyz="0 0.0 .07"/>
  </joint>
  <gazebo reference="middle_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/White</material>
  </gazebo>
<!-- end middle link -->

<!-- top link -->
 <link name="top_link">
    <inertial>
      <mass value="0.3"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!--The 3x3 rotational inertia matrix. -->
       <inertia ixx="0.0000282916666667" ixy="0" ixz="0" iyy="0.0000282916666667" iyz="0" izz="0.00005625"/>
    </inertial>
    <visual>
      <origin rpy="-1.57079632679 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
         <mesh filename="package://simbha_structure/urdf/stl/Upper_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="White"/>
    </visual>
        <collision>
      <origin rpy="-1.57079632679 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
         <mesh filename="package://simbha_structure/urdf/stl/Upper_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
   <material name="White"/>
    </collision>
  </link>
  <gazebo reference="top_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

<joint name="top_joint" type="fixed">
    <parent link="middle_link"/>
    <child link="top_link"/>
    <origin rpy="0 0 0" xyz="0 0.0 .035"/>
  </joint>
  <gazebo reference="top_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/White</material>
  </gazebo>
  <!-- end top link -->


  <link name="right_wheel">
    <visual>
      <origin rpy="1.57079632679 0  0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.035"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="100000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Green</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
      <origin rpy="0 0 0" xyz="0.0 -0.138 0.035"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <!-- Transmission is important to link the joints and the controller -->


  <transmission name="right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint"/>
    <actuator name="right_wheel_joint_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

 <link name="left_wheel">
    <visual>
      <origin rpy="1.57079632679 0  0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.035"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0 " xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="100000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Green</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0.138 0.035"/>
    <axis rpy="0  0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint"/>
    <actuator name="left_wheel_joint_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <!--Caster front  -->

  <link name="caster_front_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.01214"/>
      </geometry>
      <material name="White"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.007"/>
      </geometry>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0000001" ixy="0.0" ixz="0.0" iyy="0.0000001" iyz="0.0" izz="0.0000001"/>
    </inertial>
  </link>
  <joint name="caster_front_joint" type="continuous">
    <parent link="caster_link"/>
    <child link="caster_front_link"/>
    <origin rpy="0 0 0" xyz="0.05 0 -0.0275"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="caster_front_link">
<!--     <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="100000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 1 0"/> -->
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/White</material>
  </gazebo>
  
<link name="caster_link">
    <visual>
      <origin rpy="0 0  0 " xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.01214"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.005"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0.05 0 0"/>
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001"/>
    </inertial>
  </link>
  
<joint name="caster_front_joint_base" type="fixed">
    <parent link="base_link"/>
    <child link="caster_link"/>
    <origin rpy="0 0 0" xyz="0.07 0.0 .035"/>
  </joint>
  <gazebo reference="caster_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/White</material>
  </gazebo>

  <!--Caster back  -->

  <link name="caster_back_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.01214"/>
      </geometry>
      <material name="White"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.007"/>
      </geometry>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0000001" ixy="0.0" ixz="0.0" iyy="0.0000001" iyz="0.0" izz="0.0000001"/>
    </inertial>
  </link>
  <joint name="caster_back_joint" type="continuous">
    <parent link="caster_b_link"/>
    <child link="caster_back_link"/>
    <origin rpy="0 0 0" xyz="0.05 0 -0.0275"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="caster_front_link">
<!--     <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="100000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 1 0"/> -->
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/White</material>
  </gazebo>
  
<link name="caster_b_link">
    <visual>
      <origin rpy="0 0  0 " xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.01214"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.005"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0.05 0 0"/>
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001"/>
    </inertial>
  </link>

<joint name="caster_back_joint_base" type="fixed">
    <parent link="base_link"/>
    <child link="caster_b_link"/>
    <origin rpy="0 0 0" xyz="-0.16 0.0 .035"/>
  </joint>
  <gazebo reference="caster_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/White</material>
  </gazebo>

  <!-- laser sensor -->
        <link name="laser_link">
    <inertial>
      <mass value="0.02"/>
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <inertia ixx="3.126666666666667e-05" ixy="0" ixz="0" iyy="3.126666666666667e-05" iyz="0" izz="6.250000000000001e-05"/>
    </inertial>
        <!-- <visual name="visual">
        <geometry>
            <mesh>
              <uri>model://hokuyo/meshes/hokuyo.dae</uri>
            </mesh>
        </geometry>
      </visual> -->
      <visual>
        <origin xyz="0 0 0"
            rpy="0 0 0.035"/>
        <geometry>
          <box size="0.01 0.01 0.01"/>
        </geometry>
		</visual>
      <collision name="collision-base">
        <pose>0 0 -0.0145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.05 0.05 0.041</size>
          </box>
        </geometry>
      </collision>
      <collision name="collision-top">
        <pose>0 0 0.0205 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.021</radius>
            <length>0.029</length>
          </cylinder>
        </geometry>
      </collision>


       <!-- <sensor name="laser" type="ray">
        <pose>0.01 0 0.0175 0 -0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>640</samples>
              <resolution>1</resolution>
              <min_angle>-2.26889</min_angle>
              <max_angle>2.268899</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.08</min>
            <max>10</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="laser" filename="libRayPlugin.so" />
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
      </sensor> -->
    </link>

    <gazebo reference="laser_link">
    <sensor type="ray" name="head_hokuyo_sensor">
          <always_on>true</always_on>
          <visualize>true</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>720</samples>
                <resolution>1.000000</resolution>
                <min_angle>-2.26889</min_angle>
                <max_angle>2.26889</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.12</min>
              <max>3.5</max>
              <resolution>0.01</resolution>
            </range>
            <!-- Using gazebo's noise instead of plugin's -->
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
          <!-- Using gazebo's update rate instead of plugin's -->
          <update_rate>5</update_rate>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=simbha_bot/scan</remapping>
          </ros>
            <!-- Set output to sensor_msgs/LaserScan to get same output type as gazebo_ros_laser -->
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>laser_link</frame_name>
        </plugin>  
        </sensor>
  </gazebo>

<joint name="laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link"/>
    <origin rpy="0 0 0" xyz="0.095 0.0 0.075"/>
  </joint>
<!-- laser sensor ends -->

<!-- kinect sensor -->
 <link name="kinect_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      
       <inertia ixx="0.0000282916666667" ixy="0" ixz="0" iyy="0.0000282916666667" iyz="0" izz="0.00005625"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
            <mesh filename="package://simbha_structure/urdf/meshes/kinect.stl" scale="0.001 0.001 0.001"/>
            
        </geometry>
      <material name="Black"/>
    </visual>
        <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.005"/>
      </geometry>
   <material name="Black"/>
    </collision>

  </link>

<joint name="kinect_joint" type="fixed">
    <parent link="middle_link"/>
    <child link="kinect_link"/>
      <origin rpy="0 0 0" xyz="0.075 0.0 0.155"/>
  </joint>
  <gazebo reference="kinect_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/Black</material>
  
        <sensor name='camera' type='depth'>
          <always_on>1</always_on>
          <update_rate>20</update_rate>
          <camera name='__default__'>

            <distortion>
              <k1>0.0</k1>
              <k2>0.0</k2>
              <k3>0.0</k3>
              <p1>0.0</p1>
              <p2>0.0</p2>
              <center>0.5 0.5</center>
            </distortion>

            <horizontal_fov>1.0472</horizontal_fov>
            <image>
              <format>B8G8R8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>8</far>
            </clip>
          </camera>
          <plugin name='kinect_camera_controller' filename='libgazebo_ros_camera.so'>
            <camera_name>camera</camera_name>
            <alwaysOn>true</alwaysOn>
            <update_rate>10</update_rate>

            <ros>
              <namespace>simbha_bot</namespace>
              <argument>simbha/image_raw:=simbha/simbha_image</argument>
              <argument>simbha/image_depth:=simbha/simbha_image_depth</argument>
              <argument>simbha/camera_info:=simbha/simbha_info_raw</argument>
              <argument>simbha/camera_info_depth:=simbha/simbha_info_depth</argument>
              <argument>simbha/points:=simbha/simbha_points</argument>
            </ros>

            <min_depth>0.01</min_depth>
            <max_depth>300.0</max_depth>

            <!-- <imageTopicName>rgb/image_raw</imageTopicName>
            <depthImageTopicName>depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>depth/points</pointCloudTopicName>
            <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
            <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName> -->


            <frame_name>kinect_link</frame_name>

            <hack_baseline>0.1</hack_baseline>
            <!-- <baseline>0.1</baseline> -->
            <!-- <distortion_k1>0.0</distortion_k1>
            <distortion_k2>0.0</distortion_k2>
            <distortion_k3>0.0</distortion_k3>
            <distortion_t1>0.0</distortion_t1>
            <distortion_t2>0.0</distortion_t2> -->
            <!-- <pointCloudCutoff>0.4</pointCloudCutoff> -->
            
          </plugin>
          <pose>-0.087 -0.0015 0.2972 1.58 0 0</pose>
        </sensor>
        </gazebo>
<!-- kinect sensor end -->
<gazebo>

      <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>10.0</update_rate>
        <joint_name>right_wheel_joint</joint_name>
        <joint_name>left_wheel_joint</joint_name>
      </plugin>

    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller_front">
      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>True</publishWheelTF>
      <publishTf>1</publishTf>
      <!-- <publishWheelJointState>true</publishWheelJointState> -->
      <alwaysOn>true</alwaysOn>
      <update_rate>10.0</update_rate>
      <!-- <updateRate>10.0</updateRate> -->
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.3</wheel_separation>
      <wheel_diameter>0.065</wheel_diameter>
      <broadcastTF>1</broadcastTF>

      <max_wheel_torque>30</max_wheel_torque>
      <max_acceleration>1.8</max_acceleration>
      <publish_odom>true</publish_odom>

      <!-- <wheelTorque>30</wheelTorque>
      <wheelAcceleration>1.8</wheelAcceleration> -->
      <ros><argument>cmd_vel:=simbha_cmd_vel</argument></ros>
      <odometry_frame>odom</odometry_frame>
      <ros><argument>odom:=odom</argument></ros>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>
 
</robot>
